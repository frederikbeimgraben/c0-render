#use "math.c0"
#use "vector.c0"

typedef struct Color* color;

struct Color {
    int r;
    int g;
    int b;
    int a;
};

color Color(int r, int g, int b, int a) {
    color result = alloc(struct Color);
    result->r = r;
    result->g = g;
    result->b = b;
    result->a = a;
    return result;
}

color iColor(int rgba) {
    color result = alloc(struct Color);
    result->a = (rgba & 0xFF000000) >> 24;
    result->r = (rgba & 0x00FF0000) >> 16;
    result->g = (rgba & 0x0000FF00) >>  8;
    result->b = (rgba & 0x000000FF);
    return result;
}

int argb(color c) {
    return (c->a << 24) | (c->r << 16) | (c->g << 8) | c->b;
}


vector vector_from_color(color c) {
    return iVector(c->r, c->g, c->b);
}

color color_from_vector(vector v) {
    return Color(dtoi(v->x), dtoi(v->y), dtoi(v->z), 255);
}

vector TintVector(vector c, color t) {
    vector tn = unit_vector(vector_from_color(t));
    return Vector(
        dmul(c->x, tn->x),
        dmul(c->y, tn->y),
        dmul(c->z, tn->z)
    );
}
